@model Riverty.Web.Models.HistoricalRatesViewModel

@{
    ViewData["Title"] = "Historical Rates";
}

<h2>Historical Exchange Rates</h2>

<form asp-action="HistoricalRates" method="post">
    <div class="mb-3">
        <label for="CurrencyCode">Currency Code:</label>
        <input asp-for="CurrencyCode" class="form-control" />
        <span asp-validation-for="CurrencyCode" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label for="StartDate">Start Date:</label>
        <input asp-for="StartDate" type="date" class="form-control" />
        <span asp-validation-for="StartDate" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label for="EndDate">End Date:</label>
        <input asp-for="EndDate" type="date" class="form-control" />
        <span asp-validation-for="EndDate" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Get Rates</button>
</form>

@if (Model.HistoricalRates != null)
{
    <div class="chart-container mt-4">
        <canvas id="ratesChart"></canvas>
    </div>
}

@section Scripts {
    <script>
        var ctx = document.getElementById('ratesChart').getContext('2d');
        var chartData = {
            labels: @Html.Raw(Json.Serialize(Model.HistoricalRates.Select(r => r.RateDate.ToShortDateString()))),
            datasets: [{
                label: 'Exchange Rate (@Model.CurrencyCode)',
                data: @Html.Raw(Json.Serialize(Model.HistoricalRates.Select(r => r.Rates.ContainsKey(Model.CurrencyCode) ? r.Rates[Model.CurrencyCode] : 0))),
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.1
            }]
        };

        var myChart = new Chart(ctx, {
            type: 'line',
            data: chartData,
            options: {
                scales: {
                    y: {
                        beginAtZero: false
                    }
                }
            }
        });
    </script>
}